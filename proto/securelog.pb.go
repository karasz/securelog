// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/securelog.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InitCommitment represents the initial commitment sent to trusted server T.
// This implements the Log File Initialization protocol from Section 4.2.
type InitCommitment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`                 // Unique log identifier
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`     // When the log was started
	KeyA0         []byte                 `protobuf:"bytes,3,opt,name=key_a0,json=keyA0,proto3" json:"key_a0,omitempty"`                 // A_0 - initial verifier chain key (32 bytes)
	KeyB0         []byte                 `protobuf:"bytes,4,opt,name=key_b0,json=keyB0,proto3" json:"key_b0,omitempty"`                 // B_0 - initial trusted server chain key (32 bytes)
	UpdateFreq    uint64                 `protobuf:"varint,5,opt,name=update_freq,json=updateFreq,proto3" json:"update_freq,omitempty"` // Key update frequency (UPD in the paper)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitCommitment) Reset() {
	*x = InitCommitment{}
	mi := &file_proto_securelog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitCommitment) ProtoMessage() {}

func (x *InitCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitCommitment.ProtoReflect.Descriptor instead.
func (*InitCommitment) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{0}
}

func (x *InitCommitment) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *InitCommitment) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *InitCommitment) GetKeyA0() []byte {
	if x != nil {
		return x.KeyA0
	}
	return nil
}

func (x *InitCommitment) GetKeyB0() []byte {
	if x != nil {
		return x.KeyB0
	}
	return nil
}

func (x *InitCommitment) GetUpdateFreq() uint64 {
	if x != nil {
		return x.UpdateFreq
	}
	return 0
}

// OpenMessage records the fact that a log was opened and the first entry appended.
type OpenMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`                 // Unique log identifier
	OpenTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`        // When the log was opened
	FirstIndex    uint64                 `protobuf:"varint,3,opt,name=first_index,json=firstIndex,proto3" json:"first_index,omitempty"` // Index of the opening entry
	FirstTagV     []byte                 `protobuf:"bytes,4,opt,name=first_tag_v,json=firstTagV,proto3" json:"first_tag_v,omitempty"`   // μ_V for the opening entry (32 bytes)
	FirstTagT     []byte                 `protobuf:"bytes,5,opt,name=first_tag_t,json=firstTagT,proto3" json:"first_tag_t,omitempty"`   // μ_T for the opening entry (32 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenMessage) Reset() {
	*x = OpenMessage{}
	mi := &file_proto_securelog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMessage) ProtoMessage() {}

func (x *OpenMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMessage.ProtoReflect.Descriptor instead.
func (*OpenMessage) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{1}
}

func (x *OpenMessage) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *OpenMessage) GetOpenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *OpenMessage) GetFirstIndex() uint64 {
	if x != nil {
		return x.FirstIndex
	}
	return 0
}

func (x *OpenMessage) GetFirstTagV() []byte {
	if x != nil {
		return x.FirstTagV
	}
	return nil
}

func (x *OpenMessage) GetFirstTagT() []byte {
	if x != nil {
		return x.FirstTagT
	}
	return nil
}

// CloseMessage represents the log file closure notification.
// This implements the Log File Closure protocol from Section 4.2.
type CloseMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`                 // Unique log identifier
	CloseTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`     // When the log was closed
	FinalIndex    uint64                 `protobuf:"varint,3,opt,name=final_index,json=finalIndex,proto3" json:"final_index,omitempty"` // f - index of last entry
	FinalTagV     []byte                 `protobuf:"bytes,4,opt,name=final_tag_v,json=finalTagV,proto3" json:"final_tag_v,omitempty"`   // μ_V,f (32 bytes)
	FinalTagT     []byte                 `protobuf:"bytes,5,opt,name=final_tag_t,json=finalTagT,proto3" json:"final_tag_t,omitempty"`   // μ_T,f (32 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseMessage) Reset() {
	*x = CloseMessage{}
	mi := &file_proto_securelog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMessage) ProtoMessage() {}

func (x *CloseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMessage.ProtoReflect.Descriptor instead.
func (*CloseMessage) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{2}
}

func (x *CloseMessage) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *CloseMessage) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *CloseMessage) GetFinalIndex() uint64 {
	if x != nil {
		return x.FinalIndex
	}
	return 0
}

func (x *CloseMessage) GetFinalTagV() []byte {
	if x != nil {
		return x.FinalTagV
	}
	return nil
}

func (x *CloseMessage) GetFinalTagT() []byte {
	if x != nil {
		return x.FinalTagT
	}
	return nil
}

// Record is the persisted form used by Store.
// Contains both MAC chains for dual verification.
type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint64                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`          // Entry index
	Ts            int64                  `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`                // Unix nanoseconds timestamp
	Msg           []byte                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`               // Log message
	TagV          []byte                 `protobuf:"bytes,4,opt,name=tag_v,json=tagV,proto3" json:"tag_v,omitempty"` // μ_V,i - semi-trusted verifier chain tag (32 bytes)
	TagT          []byte                 `protobuf:"bytes,5,opt,name=tag_t,json=tagT,proto3" json:"tag_t,omitempty"` // μ_T,i - trusted server chain tag (32 bytes)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_proto_securelog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{3}
}

func (x *Record) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Record) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *Record) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Record) GetTagV() []byte {
	if x != nil {
		return x.TagV
	}
	return nil
}

func (x *Record) GetTagT() []byte {
	if x != nil {
		return x.TagT
	}
	return nil
}

// RecordBatch wraps multiple records for efficient bulk transfer
type RecordBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*Record              `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordBatch) Reset() {
	*x = RecordBatch{}
	mi := &file_proto_securelog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordBatch) ProtoMessage() {}

func (x *RecordBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordBatch.ProtoReflect.Descriptor instead.
func (*RecordBatch) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{4}
}

func (x *RecordBatch) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

// VerifyRequest is sent to the trusted server for log verification
type VerifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogId         string                 `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Records       []*Record              `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyRequest) Reset() {
	*x = VerifyRequest{}
	mi := &file_proto_securelog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRequest) ProtoMessage() {}

func (x *VerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRequest.ProtoReflect.Descriptor instead.
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{5}
}

func (x *VerifyRequest) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *VerifyRequest) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

// VerifyResponse is returned by the trusted server after verification
type VerifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Verified      bool                   `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Empty if verified=true
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyResponse) Reset() {
	*x = VerifyResponse{}
	mi := &file_proto_securelog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResponse) ProtoMessage() {}

func (x *VerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_securelog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResponse.ProtoReflect.Descriptor instead.
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return file_proto_securelog_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *VerifyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_securelog_proto protoreflect.FileDescriptor

const file_proto_securelog_proto_rawDesc = "" +
	"\n" +
	"\x15proto/securelog.proto\x12\tsecurelog\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb1\x01\n" +
	"\x0eInitCommitment\x12\x15\n" +
	"\x06log_id\x18\x01 \x01(\tR\x05logId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12\x15\n" +
	"\x06key_a0\x18\x03 \x01(\fR\x05keyA0\x12\x15\n" +
	"\x06key_b0\x18\x04 \x01(\fR\x05keyB0\x12\x1f\n" +
	"\vupdate_freq\x18\x05 \x01(\x04R\n" +
	"updateFreq\"\xbe\x01\n" +
	"\vOpenMessage\x12\x15\n" +
	"\x06log_id\x18\x01 \x01(\tR\x05logId\x127\n" +
	"\topen_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bopenTime\x12\x1f\n" +
	"\vfirst_index\x18\x03 \x01(\x04R\n" +
	"firstIndex\x12\x1e\n" +
	"\vfirst_tag_v\x18\x04 \x01(\fR\tfirstTagV\x12\x1e\n" +
	"\vfirst_tag_t\x18\x05 \x01(\fR\tfirstTagT\"\xc1\x01\n" +
	"\fCloseMessage\x12\x15\n" +
	"\x06log_id\x18\x01 \x01(\tR\x05logId\x129\n" +
	"\n" +
	"close_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcloseTime\x12\x1f\n" +
	"\vfinal_index\x18\x03 \x01(\x04R\n" +
	"finalIndex\x12\x1e\n" +
	"\vfinal_tag_v\x18\x04 \x01(\fR\tfinalTagV\x12\x1e\n" +
	"\vfinal_tag_t\x18\x05 \x01(\fR\tfinalTagT\"j\n" +
	"\x06Record\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x04R\x05index\x12\x0e\n" +
	"\x02ts\x18\x02 \x01(\x03R\x02ts\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\fR\x03msg\x12\x13\n" +
	"\x05tag_v\x18\x04 \x01(\fR\x04tagV\x12\x13\n" +
	"\x05tag_t\x18\x05 \x01(\fR\x04tagT\":\n" +
	"\vRecordBatch\x12+\n" +
	"\arecords\x18\x01 \x03(\v2\x11.securelog.RecordR\arecords\"S\n" +
	"\rVerifyRequest\x12\x15\n" +
	"\x06log_id\x18\x01 \x01(\tR\x05logId\x12+\n" +
	"\arecords\x18\x02 \x03(\v2\x11.securelog.RecordR\arecords\"Q\n" +
	"\x0eVerifyResponse\x12\x1a\n" +
	"\bverified\x18\x01 \x01(\bR\bverified\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessageB#Z!github.com/karasz/securelog/protob\x06proto3"

var (
	file_proto_securelog_proto_rawDescOnce sync.Once
	file_proto_securelog_proto_rawDescData []byte
)

func file_proto_securelog_proto_rawDescGZIP() []byte {
	file_proto_securelog_proto_rawDescOnce.Do(func() {
		file_proto_securelog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_securelog_proto_rawDesc), len(file_proto_securelog_proto_rawDesc)))
	})
	return file_proto_securelog_proto_rawDescData
}

var file_proto_securelog_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_securelog_proto_goTypes = []any{
	(*InitCommitment)(nil),        // 0: securelog.InitCommitment
	(*OpenMessage)(nil),           // 1: securelog.OpenMessage
	(*CloseMessage)(nil),          // 2: securelog.CloseMessage
	(*Record)(nil),                // 3: securelog.Record
	(*RecordBatch)(nil),           // 4: securelog.RecordBatch
	(*VerifyRequest)(nil),         // 5: securelog.VerifyRequest
	(*VerifyResponse)(nil),        // 6: securelog.VerifyResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_proto_securelog_proto_depIdxs = []int32{
	7, // 0: securelog.InitCommitment.start_time:type_name -> google.protobuf.Timestamp
	7, // 1: securelog.OpenMessage.open_time:type_name -> google.protobuf.Timestamp
	7, // 2: securelog.CloseMessage.close_time:type_name -> google.protobuf.Timestamp
	3, // 3: securelog.RecordBatch.records:type_name -> securelog.Record
	3, // 4: securelog.VerifyRequest.records:type_name -> securelog.Record
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_securelog_proto_init() }
func file_proto_securelog_proto_init() {
	if File_proto_securelog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_securelog_proto_rawDesc), len(file_proto_securelog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_securelog_proto_goTypes,
		DependencyIndexes: file_proto_securelog_proto_depIdxs,
		MessageInfos:      file_proto_securelog_proto_msgTypes,
	}.Build()
	File_proto_securelog_proto = out.File
	file_proto_securelog_proto_goTypes = nil
	file_proto_securelog_proto_depIdxs = nil
}
